<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>25, 20</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADo
        EwAAAk1TRnQBSQFMAgEBBAEAAegBAQHoAQEBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ACEAA/4D/AP6A/gB8ALvAcoBqwGQ
        Ab4BkQFqAb8BkwFtAcEBlQFwAcIBlwFzAcUBmwF2AccBnQF4AccBngF4AdIBsQGVAfkC+DAAAZwBngGd
        AV4BaQFgAWIBbgJjAW4CYwFuAWQBYwFuAWQBYwFuAWUBYwFuAWUBYwFuAWUBYwFuAWUBYwFuAWUBYwFu
        AWYBYwFuAWYBYwFvAWYBYAFrAWIBnQGgAZ0GAAP8A9gGzAHGAccByQHEAcYByQHEAcYByQHFAccByQLL
        BMwDzgPxBgAB0gHQAc8BugG2AbUBuQG2AbUBugG3AbUBuwG5AbcBvAGzAasBvgF+AUkBwQF6AT4BwQF6
        AT8BwQF6AT8BwQF6AT8BwAF6AT8BwAF5AT4BvwF5AT0BvgF7AUQB0QHGAbwD7QLRAdIC0QHSAtEB0gLR
        AdIC0QHSAtEB0gLRAdIC0QHSAtEB0gLRAdIC0QHSAtEB0gLRAdIC0QHSA+gBXgFpAV8B6wH1AewB1AHt
        AdcB1AHuAdcB1AHuAdgB1QHuAdgB1QHuAdkB1QHuAdkB1gHvAdoB1gHvAdoB1AHiAewBzwHlAdYB1QHt
        AdkB2AHvAdwB1QHtAdkBYAFrAWIGAAPaA80D2gHVAdYB1wFYAXgBpAEkAVoBoAElAVoBoAE+AWkBogHQ
        AdEB0wPaA9kDvQYAAXwBdgFzAbIBrgGsAbYBswGxAboBtwG1Ab4BvAG7AcUBsAGgAdIBjAFUAdUBjwFX
        AdUBjwFYAdUBkAFYAdUBkAFYAdUBjwFYAdQBjwFXAdMBjgFXAdIBigFRAZUBcgFZArcBugEwASoBQgEz
        AS0BRQE0AS0BRQE0AS0BRQEzAS0BRQE0AS0BRQE0AS0BRQE0AS0BRQE0AS0BRQEzASwBRAEvASkBPwEv
        ASkBQAEvASkBPwEwASoBQgGhAZ8BpAFhAW0BYwHuAfgB7wGkAdsBvAGMAcoBpgGYAdUBsQGGAckBoQFz
        Aa0BwAFVAYcBxgGDAcIBtgF2AawBrwFoAW8B6wGBAcUBowGMAdABpgGFAcoBoAHSAekB1wFjAW4BZgYA
        A8wD2APbAtcB2AFeAYIBrAEwAWwBrwExAWwBrwFHAXYBrgHRAdIB1ALcAdsD3AO8BgABkAGLAYcB4gHh
        AeAB5wHmAeUB6gLpBO4BzwG5AecBoAFsAeYBogFwAecBowFyAecBpAFyAecBpAFyAecBowFyAeYBowFx
        AeUBogFxAeYBnwFrAbQBhAFhAa8BrgGxATUBLgFIATUBLgFIATUBLgFIATUBLgFIATUBLgFIATUBLgFI
        ATUBLgFIATUBLgFIATUBLgFIATUBLgFIATIBKwFEAS4BKAFAATIBKwFFATUBLgFIAZcBlQGcAWABbQFj
        AewB9wHuAZYB2wGvAX4ByQGaAY8B2AGqAXkByAGXAYoB1gGpAV4BogGsAVQBiAHXAUcBXAHgAXgBqAHJ
        AX4ByQGZAYcB0AGgAYABygGaAdYB7gHaAWMBbgFlBgADzAPZA90C2AHZAWUBjAG1AT0BgAG/AT4BgAG/
        AVEBhgG6AtMB1QbdA7wGAAGQAYoBhwHiAeEB4AHmAuUC6gHpAe8B7gHtAfQB0AG3Ae4BtAGKAfABuQGT
        AfUBtgGKAfcBtQGIAfcBtgGIAfcBtQGIAfYBtQGHAfUBtAGHAfUBsQGBAdsBnwF2AacBpgGsAToBMQFO
        AToBMQFPAToBMQFPAToBMQFPAToBMQFPAToBMQFPAToBMQFPATkBMQFOATkBMQFOAToBMQFPATgBMAFN
        ATMBLAFHATkBMQFNATkBMQFOAY0BigGTAWABbQFiAfcB+wH4AZsB3gHEAXIBwwGTAYABzwGfAW4BwQGP
        AX0BzgGdAW0BvwGMAW8BpAG7AUcBVwHaAUsBewHRAVABjQG2AXIBvgGdAXMBwwGPAdcB7wHaAWMBbgFl
        BgADzAPcA98C2wHcAWwBlgG+AUkBkwHQAUoBkwHPAVoBlQHHAdUB1gHXBuADvQYAAZABigGHAeEB4AHf
        AeYB5QHkAeoC6QLuAe0B8QHoAeIB3wHKAbsB4gHcAdgB8AHZAcoB7wHOAbgB7gHNAbcB7AHLAbUB6QHH
        AbAB5QHDAawB4gG6AZ0BzwGmAYoBngGcAaMBPwE2AVYBPwE2AVYBPwE2AVYBPwE2AVYBPwE2AVYBPwE2
        AVYBPwE2AVYBPwE2AVYBPwE2AVYBPwE2AVYBPwE2AVYBPgE1AVUBPwE2AVYBPwE2AVYBgwGAAY0BYAFt
        AWIB+AH8AfkBvAL7AZ0B5wHfAZMB4QG7AXYByQGXAYkB2gGpAXQBxgGYAXABewHzAWoBrgGtAYIB4QHd
        AVcBpwHhAVUBjAHmAWABnwG9AdAB6QHbAWMBbgFlBgADzAPdA+IC3QHeAXIBoAHHAVUBpwHiAVYBpwHh
        AWMBpAHVAtcB2QbiA70GAAGOAYkBhQHfAd0B3AHjAeIB4QHnAeYB5QLqAekB7QHoAeQB3wHCAasB4QHI
        AbYB5gHOAbwB6AHOAbwB6QHQAb4B5gHMAboB3gHFAbIB1gG8AakB0AGwAZcBmwGOAYUBlgGSAZwBRgE7
        AV8BRQE7AV8BRQE7AV8BRQE7AV8BRQE7AV8BRgE7AV8BRQE7AV8BRQE7AV8BRgE7AV8BRQE7AV8BRgE7
        AV8BRQE7AV8BRQE7AV8BRgE7AV8BewF3AYgBXwFsAWIB+AH8AfgBpAHrAe0BjQLfAZcC6wFxAc8BtwFz
        AcoBmQFVAYMBsAFfAXcB1wFQAcMBtgGQAdUBzQFPAsYBfQHQAd0BYwGZAdsBygHkAdwBYwFuAWUD/wP0
        AcUCxAHgAuED5APjAbcBxgHUAawBxgHYAawBxgHYAbEBxgHWAuAB4QblArwBugLxAfAD+wGMAYcBgwHa
        AdgB1wHeAdwB2wHhAeAB3wHkAuMB5wHjAeAB6QHAAaIB7QG4AZIB7wG2AY4B8AGsAXwB7wGqAXoB7AGm
        AXUB5wGhAW0B4QGZAWQB3QGeAW4BnQGPAYUBjQGJAZgBTAFBAWgBTAFBAWgBTAFBAWgBTAFBAWgBTAFB
        AWgBTAFBAWgBTAFBAWgBTAFBAWgBTAFBAWgBTAFBAWgBTAFBAWgBTAFBAWgBTAFBAWkBTAFBAWkBcwFs
        AYUBXwFsAWEB+AH8AfgBrwL6AZQC6wGiAfkB+gGKAeoB6wGVAe0B8wFYAV4B6wGHAdkB5gFbAdIB0QHc
        AdsByQGsAdQBzQGXAdoB1AF2AdEBzgHUAe8B2wFjAW4BZAPoAYYBcgEyAYsBdgE7AdMBzwHCA+gT5wLo
        AeQB4wHhAaIBmAFqAXsBYwEXAb0BuwGyAYkBhAGAAdMB0QHQAdcB1QHUAdoB2AHXAd0B2wHaAd8B3QHc
        AeMB2wHWAeUB3AHWAeYB3QHWAecB2wHSAecB2gHSAegB2wHTAecB2gHRAeYB2QHQAeQB2QHRAZ4BmAGV
        AYQBfwGTAVIBRgFyAVIBRgFyAVMBRgFyAVIBRgFyAVIBRgFyAVIBRgFyAVMBRgFyAVIBRgFyAVIBRgFy
        AVMBRgFyAVIBRgFyAVMBRgFyAVIBRgFxAVIBRgFyAWsBYwGCAV8BbAFgAfgB/AH4AZ8C8QGBAd0B3wGK
        AeoB6wF0At4BZAGRAe4BVAF9AeIBZwHcAd0BdgG/AbcB5QHIAbIB2gG6AaMB3gG8AaYB2QG3AZ8B1gHt
        AdgBYwFuAWMBxQHEAb0BjAFtARIBiwFtARIBlQF8AS4BuwGvAYgB4QHgAdoD6gjpAeoD6QHMAcUBrQGf
        AYkBRQGMAW4BFgGNAW4BEwGnAZ4BgQGLAYUBgQHUAdIB0AHWAdQB0wHYAdYB1QHbAdkB2AHbAdoB2QHa
        AdgB1wHaAtkB3AHbAdoC3AHbAd0B3AHbAd8C3gHlAuQB6APnAuYBoQGdAZoBfQF2AZIBWQFMAXsBWQFM
        AXsBWQFMAXsBWQFMAXsBWgFMAXsBWQFMAXsBWQFMAXsBWQFMAXsBWQFMAXsBWQFMAXsBWQFMAXsBWQFM
        AXsBWQFMAXsBWQFMAXsBZwFdAYQBXgFsAWAB+AH8AfgBpgL5AYsB6QHqAZkB+AH6AXcB0wHrAWQBagH/
        AXYB3AHqAW8B3wHeAcEBxQG1AfEB0QG6AeUBwQGpAeoBxwGuAeQBvQGhAdYB7QHXAWIBbgFjA+8BogGO
        AVIBogGAARcBnAF7ARcBmQF4ARQBpgGQAU4B3wHdAdUB7ALtA+wC6AHmAbkBrAGEAZoBewEgAZwBegEW
        AZ8BfQEXAaYBhAEdAc0BywHHAZABigGHAd4B3QHcAeEB4AHfAeIB4QHgAeIB4QHgAeEB3wHeAdsB2gHZ
        AdUB0wHSAdQB0gHRAdUB0wHSAdYB1AHTAdYB1AHTAd0B3AHbAekB6AHnAekC6AGkAZ8BnQF6AXABkgFg
        AVEBhQFgAVEBhQFgAVEBhQFgAVEBhQFgAVEBhQFgAVEBhQFgAVEBhQFgAVEBhQFgAVEBhQFfAVEBhAFg
        AVEBhQFgAVEBhQFgAVEBhQFgAVEBhQFnAVcBhwFeAWwBYAH4AfwB+AGQAuoBdwHdAd4BgQHpAeoBTQFq
        AeIBYgGdAe4BXQLXAVoBywHJAdQBsAGXAeIBugGfAdYBrAGPAdsBsAGRAdQBpwGGAdYB7QHXAWIBbQFj
        AwAD8QG0AawBlAGwAZABKAGxAY0BHAGtAYoBGwGqAY0BMAHGAboBkQHVAc8BuwG1AZ8BWQGrAYkBHQGw
        AYwBGwG0AY8BGwGtAZ4BbALkAeMD/QGTAY4BiwHlAuMB6QLnAesC6gHtAuwB7gHtAuwB6wHqAeUB5AHj
        AdgB1gHVAdABzgHMAdABzgHMAdEBzwHNAdIB0AHOAd0B2wHaAesC6gGoAaQBoQHMAcsBzgF0AWkBjwFc
        AUwBgwFcAUwBgwFbAU0BgwFcAUwBgwFfAVABgQFkAVoBiAFoAV8BigFpAV8BigFpAV8BigFoAV8BigFp
        AV8BigFpAVsBigF2AWsBkAHBAcABxAFeAWwBYAH3AfwB+AGfAvkBhQHpAeoBhAHTAfoBUQFZAfABhwHy
        AfcBXwHaAdcBmAHVAcoB4AG3AZwB7QHHAakB4AGzAZQB5gG4AZgB3gGuAYwB1wHsAdYBYgFtAWMGAAP+
        AcsByQLDAZ4BJQHGAZ4BIQHCAZsBIAG7AZUBHwGxAY4BHgHBAZoBHwHCAZsBIAHIAaABIQGqAZEBQwPn
        BgABgAF6AXcBxgHFAcQBzAHKAckBzwLNAdEB0AHPAdMB0gHRAdUB1AHTAdYB1QHUAdMB0gHRAcMBwQHA
        AakBpwGmAaIBoAGfAaIBoAGeAaIBoAGfAawBqgGoAYkBhQGCA/8BxQHEAcgBZAFSAYkBZAFTAYkBZAFS
        AYkBZAFSAYkBgQF4AZgD4wPtD+wD8AP9AV4BbAFfAfcB/AH4AYoC6gFxAd0B3gFVAWQB8AFVAZ8B3wFy
        AugBRQLBArsBpQHQAaQBgwHeAbABjgHRAZ4BeQHWAaIBeQHPAZgBcAHXAesB1QFhAW0BYwkAA/4B5wLm
        AboBqgF+AdcBrQElAdYBqwElAdQBqgElAdcBrQElAb8BogFBAcIBtgGEAdMB0gHPA+oGAAFGAT4BOQFD
        ATwBNwFHAUABOwFLAUQBPwFPAUgBQwFSAUwBRwFWAU8BSwFaAVMBTwFeAVcBUwFgAVoBVgFcAVYCUgFM
        AUcBQAE5ATQBOQEyAS4BOAEyAS4BOwEzAS4DAAP2AdABzwHRAc0BzAHOAc0BzAHOAcwBywHOAt8B4AP+
        GAABXgFsAV8B9wH8AfgBnQL5AWsBtAHtAWEBcAH+AYAB5wHpAYwC9AFRAs0B7AHCAaQB3QGtAYoB6wG6
        AZcB3QGnAYAB4gGrAYMB2gGgAXQB2QHqAdQBYAFtAWMPAAP5AbgBswGbAd4BtQEuAeoBvgErAbwBrAFx
        AeQC4wLRAdMD3wPqBgABZQFfAVoBSgFBATwBTgFFAUABUwFLAUYBWQFSAU0BXwFYAVMBZAFdAVgBaAFh
        AV0BbAFlAWEBbwFpAWQBcgFsAWcBdAFuAWkBagFjAV4BTgFJAUUBRgFBAT4BXAFXAVQwAAFbAWkBXAH7
        AfwB+wH8Af4B/AH3AfwB+AH3AfwB+AH3AfwC+AH8AfgB9wH8AfkB+AH8AvgB/AH4AewB9wHuAe0B9wHu
        Ae8B9gHtAe4B9AHsAesB9AHrAV0BaQFeEgAD/QHUAdMB0AHDAcABrwP1A/oDxQPNA+0GAALrAeoB4QHg
        Ad8B4QLgAeIC4QLjAeIC5AHjAeUC5ALlAeQB5gLlAeYC5QHmAeUB5ALlAeQB5QLkAeMB4gLhAeAB3wPq
        MAABlgGaAZYBWwFpAVwBXgFsAV8BXgFsAV8BXgFsAV8BXgFsAV8BXgFsAWABXgFsAWABXgFsAWABXgFs
        AWABXwFsAWABXwFsAWEBXwFsAWEBXwFsAWIBXQFpAV4BlgGaAZYeAAP/A/gD9wP+BgABQgFNAT4HAAE+
        AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4EAAYABAAL/AgABwAEDBgABwAEDBgABwAEDBgABwAED
        BgABwAEDBgABwAEDJgABgAcAAcABAwYAAeABAwIAAYAB/wIAAfgBAwIAAv8CAAH8AQMCAAL/AgAB/wHD
        Cw==
</value>
  </data>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>140, 20</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbReturn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJTSURBVDhPY0AH9nNfxNjPezkTyiUN2Mx+FmM7+9kZEIYK
        EQ+spj6IsZz28MzMp///g2ioMHHAZMKtGJOJd8Cau6///Q9io2PTibdOmU64swnIrjPvv64A1crAYNh1
        xUO/88qZGU/+/y/a9+V/9fFv/5vP/wDjpnMQ3HgWgquOv/mRtP71c/OJ1w/qd152BBug1XzWQ6vl/Jn6
        09//Z2x5/794/+f/dae+/a89+e1/zQkIBhlaceTr//zdH//n7Pj4P3fL+8/GnZcP6refh7hErf5UjGrd
        yTPVx78CFX/9D2KjY/22Uxd95l17bL98/9+A+Tf/+8y7/Uyt9kQd2AAQUCk/FKNQeuBM8d5X/0E0VBgO
        VKuOSSuWHehymnblsd282/+9F9//oVR6cBNUGgKk83bGSOfvOgPCUCEUIFO4R1q5fP9FyzUv/lutfflf
        Kn/nKagUAkhkbokRz9qKNSEJpW+WlinceVFt4+f/6kAsmr4F0wBcQChupbRQwtou2d7Lj3k2/fkvtPjN
        D6HEtQgv8EYvm8kTs/wMLsybtu6iWNeZx3yb9/9l2fz/P3/n9Wc80csRgcgetvBMwNn//40O//+vc/D/
        f7X9///L7fn/X2LX//9CO/7/59v+/z/blv//mYGauea//swVs+wge/h8RIJiDZxzRvsARLEgEPMDNYA0
        8Wz7/58biLm2/PvPDXQ2d8v552wRiw4y25VCEhIUyDBaFS5i8p1xBjeeforRZ+pWRvvaHgYJQw+gHm0g
        FgDrBgI+IBYGYnEgliISizEwMHAAAFESad/hlq3EAAAAAElFTkSuQmCC
</value>
  </data>
</root>