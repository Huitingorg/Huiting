<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Excel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABDlJREFUeF7t
        m01o1EAUxyseVVRECta2SVqo9KgeFFRKu5lsrYgKraCIIiJo6Vcm/bB6VbwUseChBz15Ua9VPAjSgp8o
        Vih+oOJBUAQFQTx4kPqmfZ1mktdNym53p03+8GOTmTcvmX8zk8luU1ZytbaurO11tlouO2l67KrJ2Zjh
        ZRqwdvnJ6s+shU7uMVzWaXB2HT5fwv4/YGqWZWXA5p7GCsu195rcHgRumdx57+8sxZI2wOzK1pme0wYd
        vWh47C506Guwg1EsHQP845ezYRjD46bLfgc7tFC0NUCOX491Wty5Aduv/CdeQCCv/bAYYNdoTY/fXhi/
        LjsPJ3UHJq2PgRNdLBbL2BDY1RmZfdk6mJUPw6R1GcbwfQj4HmxQJIpnAFwGp2DjGvx1H8EY/hMMKBHF
        NICuKDGpAcHJqjCEj6WlAYtxGxQ5qWOlBlCFpSY1IDUg4QYAxG1wbtk634w+C2VgakBqQPENuGm4mR1V
        vLm+xmWVRnfDOvH4DOVjgTgKvQyA54TjVp+9XTwsVfbZm+r69q8RSanYWUTHp4/sEzxkNVGxBNpdAR8w
        jyLTdYaIWMB5gCGKoO5xODYMXDnd4oSDYJrpzkSBoVKijDpWXAOmLM85grmkrP5MFRVbzVkzhkgZPOtQ
        sRRUB/JV3gbAo/IbzKXI4Lb4ZkjGwXCZxCpFcFU898flQk8DBL12K+aTsnhmlxLj2u1YJWW5bJ8SE422
        d4HXmE8RnNAo1v+saG/agMVSUE50KCf63gbhEj+AOaXE/DBd7zlDWCRV49kHgzlioLUBLzCnIqj7Uu1l
        d+KulOGyyWCOGOhrgMDyMi2YVwrKR3BTauYHEjpHBHobADzBvFI1nG3DTSm4c7wj2kai5TqAwMbcpCzO
        jhJtYkF1IF8V3gCXjWNuUhDzKdQmJkvDAGC+EzV5YzUVvwC0nwMAexRzk4KYkXCb2OhvQBVvCj3t+VXb
        0byRahcTvQ0Q63/Mm1OWx65Q7WOgtwFbzqnLXbOrqdxw7RO4K1XusVVU+xjoa4D45RhzSsHqcADqnuKu
        IlgJXgrmiELrdQDmUwTlE6LOgns/Fs1pqmyFv30cqA7kq4IYYHm2i/mkxCOyL+YZFiuC8gu+mEj0NMBj
        PzCXIvir31PjnDasUgR1f5W43Og4BzjHMJeUWP8TsRNYrQhOmhOx86GdAW8xj6Lg12GS+a+CX6FYGr0M
        MHqcLOaRqhpoWU/FIqRhVi87Q8RSaGQAPPTAZ4fpwmTX4+yu6XFq6882rI6+vYWHjBDUfQvHhtB3HRAb
        l32Gz9vAMJgxCGuF0xbPHBILJiWOYKl8H7BoUB3IV6kBqQGpAakB1LFSA6jCUpN4AwBYCInFTqEJH0tj
        A8jyggMGJPzf5f1K5AsTuZS4V2ailLiXpiKVtNfm4ihZL07GUOJenY1S4l6ejlRJX58vK/sPQRuSMGBp
        5dQAAAAASUVORK5CYII=
</value>
  </data>
</root>